% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/tab.R
\name{tab}
\alias{tab}
\title{Stata-like Tabulation}
\usage{
tab(data, ..., cross_tab = NULL, cross_return = "all")
}
\arguments{
\item{data}{the input data.frame}

\item{...}{columns to aggregate with. This takes a tidyselect specification.}

\item{cross_tab}{(optional) columns to aggregate across groups from \code{...}. Defaults to \code{NULL}.}

\item{cross_return}{(optional) controls which values are retained. Defaults to \code{all}. Ignored if cross_tab = \code{NULL}
\itemize{
\item \code{"freq"}: only frequencies
\item \code{"col"} only column percentages
\item \code{"row"} only row percentages
\item \code{"freq+col"} frequencies and column percentages
\item \code{"freq+row"} frequencies and row percentages
\item \code{"all"} returns all data
}}
}
\value{
Returns an aggregated summary data.frame.
}
\description{
This function transforms a data.frame into an aggregate table. The main idea
was to replicate the \code{tab} command from Stata.
}
\examples{

# uni-variate tabulation
mtcars \%>\% tab(am)
tab(mtcars, am)

# multi-variate tabulation
mtcars \%>\% tab(am, cyl)
tab(mtcars, am, cyl)

# cross tabulation
mtcars \%>\% tab(am, cross_tab = cyl)
tab(mtcars, am, cross_tab = cyl)
}
